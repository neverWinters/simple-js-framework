{
    "packageJson": [
        "{",
        "   \"name\": \"<--PROJECT_NAME-->\",",
        "   \"version\": \"0.0.1\",",
        "   \"description\": \"A brand new Simple Js project.\",",
        "   \"main\": \"src/server.js\",",
        "   \"scripts\": {",
        "       \"start\": \"npm i\",",
        "       \"test\": \"nodemon src/server.js\"",
        "   },",
        "   \"author\": \"<--AUTHOR_NAME-->\",",
        "   \"license\": \"ISC\",",
        "   \"dependencies\": {",
        "       \"express\": \"^4.17.1\",",
        "       \"cors\": \"^2.8.5\",",
        "       \"dotenv\": \"^8.2.0\",",
        "       \"helmet\": \"^4.4.1\",",
        "       \"morgan\": \"^1.10.0\"",
        "   },",
        "   \"devDependencies\": {",
        "       \"nodemon\": \"^2.0.7\"",
        "   },",
        "   \"customGen\": \"simplejs\"",
        "}"
    ],
    "res": {
        "en": [
            "{",
            "}"
        ],
        "es": [
            "{",
            "}"
        ]
    },
    "public": {
        "index": [
            "<!doctype html>",
            "<html lang='en'>",
            "   <head>",
            "       <meta charset='utf-8'>",
            "       <meta name='viewport' content='width=device-width, initial-scale=1, shrink-to-fit=no'>",
            "       <link rel='shortcut icon' href='/favicon.ico' type='image/x-icon'>",
            "       <link rel='icon' href='/favicon.ico' type='image/x-icon'>",
            "       <link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css' integrity='sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l' crossorigin='anonymous'>",
            "       <link rel='stylesheet' href='css/app.css'>",
            "       <title><--PROJECT_NAME--></title>",
            "   </head>",
            "   <body>",
            "       <nav class='navbar navbar-expand-lg navbar-light bg-light'>",
            "           <a class='navbar-brand' href='#'><--PROJECT_NAME--></a>",
            "           <button class='navbar-toggler' type='button' data-toggle='collapse' data-target='#navbarSupportedContent' aria-controls='navbarSupportedContent' aria-expanded='false' aria-label='Toggle navigation'>",
            "               <span class='navbar-toggler-icon'></span>",
            "           </button>",
            "           <div class='collapse navbar-collapse' id='navbarSupportedContent'>",
            "               <ul class='navbar-nav mr-auto' id='navLinks'>", 
            "               </ul>",
            "               <ul class='navbar-nav ml-auto' id='navButtons'>",
            "               </ul>",
            "           </div>",
            "       </nav>",
            "       <div id='displayContent' class='container'>",
            "       </div>",
            "       <script src='https://code.jquery.com/jquery-3.5.1.slim.min.js' integrity='sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj' crossorigin='anonymous'></script>",
            "       <script src='https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.bundle.min.js' integrity='sha384-Piv4xVNRyMGpqkS2by6br4gNJ7DXjqk09RmUpJ8jgGtD7zP9yug3goQfGII0yAns' crossorigin='anonymous'></script>",
            "       <script src='./js/globals.js'></script>",
            "       <script src='./js/pages.js'></script>",
            "       <script src='./js/app.js'></script>",
            "       <script src='./js/authentication.js'></script>",
            "   </body>",
            "</html>"
        ],
        "css": {
            "app": [
                ""
            ]
        },
        "js":{
            "languageVariants": [
                {
                    "multiLanguageSupport": false,
                    "app": [
                        "const pageNoAuth = async() => {",
                        "   setHtmlContent('noAuth');",
                        "   let noAuthPages = [];",
                        "   for(let i = 0; i < pages.noAuth.length; i++){",
                        "       noAuthPages.push(pages.noAuth[i].name);",
                        "   }",
                        "   let queryParams = new URLSearchParams(window.location.search);",
                        "   if((queryParams.get('content') == null) || !noAuthPages.includes(queryParams.get('content'))){",
                        "       let defaultPage = pages.noAuth.filter(page => page.default == true);",
                        "       queryParams.set('content', defaultPage[0].name);",
                        "       history.replaceState(null, null, '?'+queryParams.toString());",
                        "   }",
                        "   else{ changeView(queryParams.get('content'), 'noAuth'); }",
                        "}",
                        "",
                        "const pageAuth = async() => {",
                        "   setHtmlContent('auth');",
                        "   let authPages = [];",
                        "   for(let i = 0; i < pages.auth.length; i++){",
                        "       authPages.push(pages.auth[i].name);",
                        "   }",
                        "   let queryParams = new URLSearchParams(window.location.search);",
                        "   if(queryParams.get('content') == null || !authPages.includes(queryParams.get('content'))){",
                        "       let defaultPage = pages.auth.filter(page => page.default == true);",
                        "       queryParams.set('content', defaultPage[0].name);",
                        "       history.replaceState(null, null, '?'+queryParams.toString());",
                        "   }",
                        "   else{ changeView(queryParams.get('content'), 'auth'); }",
                        "   }",
                        "",
                        "const setHtmlContent = (type) => {",
                        "   navLinks.innerHTML = generateNavLinks(type);",
                        "   navButtons.innerHTML = generateNavButtons(type);",
                        "   displayContent.innerHTML = generateDisplayContent(type);",
                        "}",
                        "",
                        "const generateNavLinks = (type) => {",
                        "   let innerHtml = '';",
                        "   if(type == 'noAuth'){",
                        "       innerHtml = /*html*/`",
                        "           <li class='nav-item active'>",
                        "               <a class='nav-link' href='#' onclick=\"changeView('home', 'noAuth')\">Home</a>",
                        "           </li>",
                        "           <li class='nav-item active'>",
                        "               <a class='nav-link' href='#' onclick=\"changeView('about', 'noAuth')\">About</a>",
                        "           </li>",
                        "       `;",
                        "   }else if(type == 'auth'){",
                        "       innerHtml = /*html*/`",
                        "           <li class='nav-item active'>",
                        "               <a class='nav-link' href='#' onclick=\"changeView('authorized', 'auth')\">Authorized</a>",
                        "           </li>",
                        "       `;",
                        "   }",
                        "   return innerHtml;",
                        "}",
                        "",
                        "const generateNavButtons = (type) => {",
                        "   let innerHtml = '';",
                        "   if(type == 'noAuth'){",
                        "       innerHtml = /*html*/`",
                        "           <button class='btn btn-outline-success my-2 my-sm-0' type='button' onclick='signIn()'>Sign In</button>",
                        "       `;",
                        "   }else if(type == 'auth'){",
                        "       innerHtml = /*html*/`",
                        "           <button class='btn btn-outline-danger my-2 my-sm-0' type='button' onclick='signOut()'>Sign Out</button>",
                        "       `;",
                        "   }",
                        "   return innerHtml;",
                        "}",
                        "",
                        "const generateDisplayContent = (type) => {",
                        "   let innerHtml = '';",
                        "   for(let i = 0; i < pages[type].length; i++){",
                        "       innerHtml += pages[type][i].html;",
                        "       innerHtml += '\\n';",
                        "   }",
                        "   return innerHtml;",
                        "}",
                        "",
                        "const changeView = (view, type) => {",
                        "   let queryParams = new URLSearchParams(window.location.search);",
                        "   let content = queryParams.get('content');",
                        "   let defaultPage = pages[type].filter(page => page.default == true);",
                        "   if(content == view){",
                        "       let div_hide = document.querySelector(`#${defaultPage[0].name}`);",
                        "       div_hide.classList.add('d-none');",
                        "   }else{",
                        "       let div_hide = document.querySelector(`#${content}`);",
                        "       div_hide.classList.add('d-none');",
                        "   }",
                        "   let div_show = document.querySelector(`#${view}`);",
                        "   div_show.classList.remove('d-none');",
                        "   queryParams.set('content', view);",
                        "   history.replaceState(null, null, '?'+queryParams.toString());",
                        "}",
                        "",
                        "const signIn = async() => {",
                        "localStorage.setItem('authorizationData', true);",
                        "location.reload();",
                        "}",
                        "",
                        "const signOut = async() => {",
                        "   localStorage.clear();",
                        "   location.reload();",
                        "}"
                    ],
                    "pages": [
                        "const pages = {",
                        "   noAuth: [",
                        "       {",
                        "           name: 'home',",
                        "           html: /*html*/`",
                        "               <div id='home'>",
                        "                   <div class='row mt-5'>",
                        "                       <div class='col-12'>",
                        "                           <div class='jumbotron'>",
                        "                               <h1 class='display-4'>Hello, world!</h1>",
                        "                               <p class='lead'>This is a project created with Simple Js.</p>",
                        "                               <hr class='my-4'>",
                        "                               <p>This frontend uses bootstrap 4.6.0 for its correct operation.</p>",
                        "                               <a class='btn btn-primary btn-lg' href='https://getbootstrap.com/docs/4.6/getting-started/introduction/' target='_blank' role='button'>Learn more</a>",
                        "                           </div>",
                        "                       </div>",
                        "                   </div>",
                        "               </div>",
                        "           `,",
                        "           default: true",
                        "       },",
                        "       {",
                        "           name: 'about',",
                        "           html: /*html*/`",
                        "               <div id='about' class='d-none'>",
                        "                   <div class='row mt-5'>",
                        "                       <div class='col-12'>",
                        "                           <div class='jumbotron'>",
                        "                               <h1 class='display-4'>Simple JS</h1>",
                        "                               <p class='lead'>Make it simple, keep it that way.</p>",
                        "                               <hr class='my-4'>",
                        "                               <p>Simple Js is a Javascript framework that seeks simplicity both in frontend and backend, using good practices and innovating in some others.</p>",
                        "                               <div class='row'>",
                        "                                   <div class='col-6 text-center'>",
                        "                                       <a class='btn btn-primary btn-lg' href='https://simplejs.designforart.com.ve' target='_blank' role='button'>Learn more</a>",
                        "                                   </div>",
                        "                                   <div class='col-6 text-center'>",
                        "                                       <a class='btn btn-primary btn-lg' href='https://github.com/neverWinters/simple-js-framework' target='_blank' role='button'>Github Repository</a>",
                        "                                   </div>",
                        "                               </div>",
                        "                           </div>",
                        "                       </div>",
                        "                   </div>",
                        "               </div>",
                        "           `,",
                        "           default: false",
                        "       }",
                        "   ],",
                        "   auth: [",
                        "       {",
                        "           name: 'authorized',",
                        "           html: /*html*/`",
                        "               <div id='authorized'>",
                        "                   <div class='row mt-5'>",
                        "                       <div class='col-12'>",
                        "                           <div class='jumbotron'>",
                        "                               <h1 class='display-4'>Private Page</h1>",
                        "                               <p class='lead'>This page needs authorization procees to be displayed.</p>",
                        "                               <hr class='my-4'>",
                        "                               <p>Please change the module authentocation.js file to adapt it to your authentication process.</p>",
                        "                           </div>",
                        "                       </div>",
                        "                   </div>",
                        "               </div>",
                        "           `,",
                        "           default: true",
                        "       }",
                        "   ]",
                        "}"
                    ],
                    "globals": [
                        "const navLinks = document.querySelector('#navLinks');",
                        "const navButtons = document.querySelector('#navButtons');",
                        "const displayContent = document.querySelector('#displayContent');",
                        "const localStorage = window.localStorage;"
                    ]
                }
            ],
            "backendVariants": [
                {
                    "integratedBackend": false,
                    "authentication": [
                        "if(!localStorage.getItem('authorizationData')){",
                        "   pageNoAuth();",
                        "}else{",
                        "   pageAuth();",
                        "}"
                    ]
                }
            ]
        } 
            
    },
    "src": {
        "conf": {
            "static": [
                "[",
                "   {",
                "       \"name\": \"default\",",
                "        \"route\": \"/\",",
                "        \"path\": \"../public\"",
                "   }",
                "]"
            ],
            "component": [
                "[",
                "   {",
                "       \"name\": \"home\",",
                "       \"route\": \"/\",",
                "       \"path\": \"../public\",",
                "       \"fileName\": \"index.html\"",
                "   }",
                "]"
            ],
            "route": [
                "[",
                "]"
            ]
        },
        "server": [
            "const express = require('express');",
            "const cors = require('cors');",
            "const helmet = require('helmet');",
            "const morgan = require('morgan');",
            "const app = express();",
            "const path = require('path');",
            "const confStatic = require('./conf/static.json');",
            "const confComponent = require('./conf/component.json');",
            "const confRoute = require('./conf/route.json');",
            "const routesArray = [];",
            "",
            "if(process.env.NODE_ENV !== 'production'){ require('dotenv').config(); }",
            "else{",
            "   app.use((req, res, next) => {",
            "       if(!req.secure){ return res.redirect(`https://${req.headers.host + req.url}`); }",
            "       else{ return next(); }",
            "   });",
            "}",
            "app.use(helmet());",
            "app.use(cors());",
            "app.use(morgan('combined'));",
            "app.use(express.json({ extended: true, inflate: true, limit: '100kb', parameterLimit: 1000, type: 'application/json', verify: undefined }));",
            "for(let i = 0; i < confStatic.length; i++){",
            "   app.use(confStatic[i].route, express.static(path.resolve(__dirname, confStatic[i].path)));",
            "}",
            "for(let i = 0; i < confComponent.length; i++){",
            "   app.get(confComponent[i].route, (req, res) => {",
            "       res.sendFile(confComponent[i].fileName, { root: path.resolve(__dirname, confComponent[i].path) });",
            "   });",
            "}",
            "app.listen(process.env.PORT);"
        ]
    },
    "env": [
        "PORT=9898"
    ]
}